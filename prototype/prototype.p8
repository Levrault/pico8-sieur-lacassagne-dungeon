pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--main
function _init()	
	player=make_player(32,32,5)
end

function _update60()
	player:update()
end

function _draw()
	cls()
	map(0,0,0,0,128,128)
	player:draw()
	print(player.current_anim)
	print(player.dy)
end

-->8
--player

-- create a player
-- x -- x position
-- y -- y position
-- l -- lifes
-- @return p new player
function make_player(x,y,l)
	local p=make_actor(8,8,x,y)
	
	-- player properties
	p.score=0
	p.lives=l
	
	
	-- player states
	p.is_alive=true
	p.is_blocking=false
	p.is_jumping=false
	
	
	-- jump properties
	p.jump_speed=-1.75 	-- velocity
	p.jump_hold_time=0		--	how long jump is held
	p.min_jump_pressed=5		--	min time jump can be held
	p.max_jump_pressed=15	-- max time jump can be held
	p.jump_btn_released=true
	p.grouned=false
	p.moving=false
	p.airtime=0


	-- check for collision 
	-- at multiple points 
	-- along the top
	-- of the sprite: 
	-- left, center, and right.
	-- collide with flag 0
	p.collide_roof=function(self)
		for i=-(self.w/3),(self.w/3),2 do
			if fget(mget((self.x+i)/8,(self.y-(self.h/2))/8),0) then
				self.dy=0
				self.y=flr((self.y-(self.h/2))/8)*8+8+(self.h/2)
				self.jump_hold_time=0
			end
		end
	end


	-- animations
	p.current_anim="idle"
	p.current_frame=1
	p.anim_tick=0
	p.flipx=false
	p.anims={
		["idle"]={
			ticks=1,
			frames={1}
		},
		["block"]={
			ticks=1,
			frames={2}
		},
		["move"]={
			ticks=4,
			frames={3,4,5,6}
		},
		["jump"]={
			ticks=1,
			frames={7}
		},
		["fall"]={
			ticks=1,
			frames={8}
		}
	}

	-- set new anims
	p.set_anim=function(self,anim)
		if(anim==self.current_anim) return
		
		local a=self.anims[anim]
		self.anim_tick=a.ticks			
		self.current_anim=anim		
		self.current_frame=1
	end


	-- update tick (anim frames)
	p.compute_tick=function(self)
		self.anim_tick-=1
		
		if self.anim_tick<=0 then
			self.current_frame+=1
			local a=self.anims[self.current_anim]
			
			self.anim_tick=a.ticks--reset timer
			
			if self.current_frame>#a.frames then
					self.current_frame=1--loop
			end
		
		end	
	end
	
	
	-- actions
	p.jump_button={
		update=function(self)
			self.is_pressed=false
			
			if btn(5) then
				if not self.is_down then
					self.is_pressed=true
				end
				
				self.is_down=true
				self.ticks_down+=1
			else
				self.is_down=false
				self.is_pressed=false
				self.ticks_down=0
			end 
		end,
			
		--state
		is_pressed=false,	-- pressed this frame
		is_down=false,				-- currently down
		ticks_down=0,					-- how long down
	}	
	
	p.jump=function(self)
		if not self:collide_floor() then
			if self.dy<0 then
				self:set_anim("jump")
			elseif self.dy>0 then
				self:set_anim("fall")
			end
			self.grounded=false
			self.airtime+=1
		end
		
		if self.jump_button.is_down then
			
			local on_ground=(self.grounded or self.airtime<5)
			local new_jump_btn=self.jump_button.ticks_down<10
			
			if self.jump_hold_time>0 or (on_ground and new_jump_btn) then
				self.jump_hold_time+=1
				
				if self.jump_hold_time<self.max_jump_pressed then
					self.dy=self.jump_speed
				end
			end
		else
			self.jump_hold_time=0
		end
	end
	
	
	-- make player move left/right
	p.move=function(self)
		local btn_left=btn(0)
		local btn_right=btn(1)
		
		if btn_left==true then
			self.dx-=self.acc
			self.moving=true
			self.flipx=true
			
			self:set_anim("move")
			
			btn_right=false
		elseif btn_right==true then
			self.dx+=self.acc
			self.moving=true
			self.flipx=false
			
			self:set_anim("move")
			
			btn_left=false
		else
			self.moving=false
			self.dx*=self.dcc
			if self.grounded then
				self:set_anim("idle")
			end
		end
		
		--limit walk speed
		self.dx=mid(-self.max_dx,self.dx,self.max_dx)
		self.x+=self.dx
		
		-- side collision
		p:collide_side(self)
	end


	-- gravity
	p.compute_gravity=function(self)
		if(self:collide_floor()==true) return
		self.dy+=self.grav
		self.dy=mid(-self.max_dy,self.dy,self.max_dy)
		self.y+=self.dy
	end	
	
	
	-- update game loop
	p.update=function(self)
		self.jump_button:update()
		self:jump()
		self:collide_roof()
		self:compute_gravity()
		self:move()
		self:compute_tick()
	end
	
	
	-- game loop functions
	p.draw=function(self)
		local a=self.anims[self.current_anim]
		local frame=a.frames[self.current_frame]
		spr(
			frame,
			self.x-(self.w/2),
			self.y-(self.h/2),
			self.w/8,self.h/8,
			self.flipx,
			false
		)
	end
	
	return p
end
-->8
--actor

-- generic actor properties
-- w: width
-- h: height
-- x: x pos
-- y: y pos
function make_actor(w,h,x,y)
	local a={}
	
	-- size
	a.w=w
	a.h=h
	
	-- movement
	a.x=x 					-- x position
	a.y=y 					-- y position
	a.dx=0					-- x direction speed
	a.dy=0					-- y direction speed
	a.max_dx=1	-- x direction speed
	a.max_dy=1	-- y direction speed
	
	-- physic
	a.grav=0.20 	-- gravity
	a.acc=0.05			-- accelaration
	a.dcc=0.01			-- deceleration
	a.air_dcc=0.8-- air decceleration

	
	-- check for collision 
	-- at multiple points 
	-- along the bottom
	-- of the sprite: 
	-- left, center, and right.
	-- collide with flag 0, 1
	a.collide_floor=function(self)
	
		if self.dy<0 then
			return false
		end
		
		local landed=false

		for i=-(self.w/3),(self.w/3),2 do
			local tile=mget((self.x+i)/8,(self.y+(self.h/2))/8)
			if fget(tile,0) or (fget(tile,1) and self.dy>=0) then
				self.dy=0
				self.y=(flr((self.y+(self.h/2))/8)*8)-(self.h/2)
				self.grounded=true
				self.airtime=0
				landed=true
			end
		end
		
		return landed
	end
	
	
	-- check for collision 
	-- at multiple points 
	-- along the side
	-- of the sprite: 
	-- bottom, center, and top.
	-- collide with flag 0
	a.collide_side=function(self)
		local offset=self.w/3
		for i=-(self.w/3),(self.w/3),2 do
				if fget(mget((self.x+(offset))/8,(self.y+i)/8),0) then
					self.dx=0
					self.x=(flr(((self.x+(offset))/8))*8)-(offset)
					return true
				end
				if fget(mget((self.x-(offset))/8,(self.y+i)/8),0) then
					self.dx=0
					self.x=(flr((self.x-(offset))/8)*8)+8+(offset)
					return true
				end
		end
		return false
	end
	
	return a
end
__gfx__
00000000070000000700000007000000007000000007000000700000070000000700000000070000000070000000000000000000000000000000000000000000
00000000070550000705500007055000007550000007500000755000070550000705500000755000000750000005500000055000000000000000000000000000
000000000602f000060244400602f0000062f0000006f0000062f000060244400602f0000602f0000062f0000002f0000002f000000000000000000000000000
00000000062244400622494006224440006244000026240000624400062249400622444001224440001244000022240000224440000000000000000000000000
0000000001d2494001d2444001dd4940001d49000021d400001d490001d2444001d2494000d2494000d249000021667700124940000000000000000000000000
0000000000dd444000ddd000000d4440000dd400000dd400000dd40000ddd00000dd444000dd444000ddd40000ddd40006dd444005f444000000000000000000
00000000002020000020200000022000000220000002200000022000002020000020200000202000002020000020200060202000022666700000000000000000
0000000000101000001010000001000000001000000100000000100000100000000010000010100000101000001010000010100022ddd2210000000000000000
d6666667000670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1d666676000670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11dddd66005660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11dddd66005667000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11dddd6605d666700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11dddd6605d666700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
100000d655dd66670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000d555ddd660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000066666600000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666667000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666667000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000066667700000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000000007700000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00770000000007700000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000000007770000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000000007770000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00070000077777700000000007000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007000007777000000000000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077770000000700777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000077777700000000007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0004040404040404040401000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
